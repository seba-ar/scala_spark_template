package cdr
import org.apache.spark.sql.functions._
import org.apache.spark.sql.types._
import org.apache.spark.sql.Column
import org.apache.spark.sql.DataFrame

object CdrData {
  def getBaseTypes = StructType(
    Seq(
      StructField("cdr_id", StringType),
      StructField("cdr_sub_id", StringType),
      StructField("cdr_type", StringType),
      StructField("split_cdr_reason", StringType),
      StructField("cdr_batch_id", StringType),
      StructField("src_rec_line_no", StringType),
      StructField("src_cdr_id", StringType),
      StructField("src_cdr_no", StringType),
      StructField("status", StringType),
      StructField("re_rating_times", StringType),
      StructField("create_date", StringType),
      StructField("start_date", StringType),
      StructField("end_date", StringType),
      StructField("cust_local_start_date", StringType),
      StructField("cust_local_end_date", StringType),
      StructField("std_evt_type_id", StringType),
      StructField("evt_source_category", StringType),
      StructField("obj_type", StringType),
      StructField("obj_id", StringType),
      StructField("owner_cust_id", StringType),
      StructField("default_acct_id", StringType),
      StructField("pri_identity", StringType),
      StructField("bill_cycle_id", StringType),
      StructField("service_category", StringType),
      StructField("usage_service_type", StringType),
      StructField("session_id", StringType),
      StructField("result_code", StringType),
      StructField("result_reason", StringType),
      StructField("be_id", StringType),
      StructField("hot_seq", StringType),
      StructField("cp_id", StringType),
      StructField("recipient_number", StringType),
      StructField("usage_measure_id", StringType),
      StructField("actual_usage", StringType),
      StructField("rate_usage", StringType),
      StructField("service_unit_type", StringType),
      StructField("usage_measure_id_2", StringType),
      StructField("actual_usage_2", StringType),
      StructField("rate_usage_2", StringType),
      StructField("service_unit_type_2", StringType),
      StructField("debit_amount", StringType),
      StructField("reserved_1", StringType),
      StructField("debit_from_prepaid", StringType),
      StructField("debit_from_advance_prepaid", StringType),
      StructField("debit_from_postpaid", StringType),
      StructField("debit_from_advance_postpaid", StringType),
      StructField("debit_from_credit_postpaid", StringType),
      StructField("total_tax", StringType),
      StructField("free_unit_amount_of_times", StringType),
      StructField("free_unit_amount_of_duration", StringType),
      StructField("free_unit_amount_of_flux", StringType),
      StructField("acct_id_1", StringType),
      StructField("acct_balance_id_1", StringType),
      StructField("balance_type_1", StringType),
      StructField("cur_balance_1", StringType),
      StructField("chg_balance_1", StringType),
      StructField("currency_id_1", StringType),
      StructField("oper_type_acct_1", StringType),
      StructField("acct_id_2", StringType),
      StructField("acct_balance_id_2", StringType),
      StructField("balance_type_2", StringType),
      StructField("cur_balance_2", StringType),
      StructField("chg_balance_2", StringType),
      StructField("currency_id_2", StringType),
      StructField("oper_type_acct_2", StringType),
      StructField("acct_id_3", StringType),
      StructField("acct_balance_id_3", StringType),
      StructField("balance_type_3", StringType),
      StructField("cur_balance_3", StringType),
      StructField("chg_balance_3", StringType),
      StructField("currency_id_3", StringType),
      StructField("oper_type_acct_3", StringType),
      StructField("acct_id_4", StringType),
      StructField("acct_balance_id_4", StringType),
      StructField("balance_type_4", StringType),
      StructField("cur_balance_4", StringType),
      StructField("chg_balance_4", StringType),
      StructField("currency_id_4", StringType),
      StructField("oper_type_acct_4", StringType),
      StructField("acct_id_5", StringType),
      StructField("acct_balance_id_5", StringType),
      StructField("balance_type_5", StringType),
      StructField("cur_balance_5", StringType),
      StructField("chg_balance_5", StringType),
      StructField("currency_id_5", StringType),
      StructField("oper_type_acct_5", StringType),
      StructField("acct_id_6", StringType),
      StructField("acct_balance_id_6", StringType),
      StructField("balance_type_6", StringType),
      StructField("cur_balance_6", StringType),
      StructField("chg_balance_6", StringType),
      StructField("currency_id_6", StringType),
      StructField("oper_type_acct_6", StringType),
      StructField("acct_id_7", StringType),
      StructField("acct_balance_id_7", StringType),
      StructField("balance_type_7", StringType),
      StructField("cur_balance_7", StringType),
      StructField("chg_balance_7", StringType),
      StructField("currency_id_7", StringType),
      StructField("oper_type_acct_7", StringType),
      StructField("acct_id_8", StringType),
      StructField("acct_balance_id_8", StringType),
      StructField("balance_type_8", StringType),
      StructField("cur_balance_8", StringType),
      StructField("chg_balance_8", StringType),
      StructField("currency_id_8", StringType),
      StructField("oper_type_acct_8", StringType),
      StructField("acct_id_9", StringType),
      StructField("acct_balance_id_9", StringType),
      StructField("balance_type_9", StringType),
      StructField("cur_balance_9", StringType),
      StructField("chg_balance_9", StringType),
      StructField("currency_id_9", StringType),
      StructField("oper_type_acct_9", StringType),
      StructField("acct_id_10", StringType),
      StructField("acct_balance_id_10", StringType),
      StructField("balance_type_10", StringType),
      StructField("cur_balance_10", StringType),
      StructField("chg_balance_10", StringType),
      StructField("currency_id_10", StringType),
      StructField("oper_type_acct_10", StringType),
      StructField("fu_own_type_1", StringType),
      StructField("fu_own_id_1", StringType),
      StructField("free_unit_id_1", StringType),
      StructField("free_unit_type_1", StringType),
      StructField("cur_amount_1", StringType),
      StructField("chg_amount_1", StringType),
      StructField("fu_measure_id_1", StringType),
      StructField("oper_type_fu_1", StringType),
      StructField("fu_own_type_2", StringType),
      StructField("fu_own_id_2", StringType),
      StructField("free_unit_id_2", StringType),
      StructField("free_unit_type_2", StringType),
      StructField("cur_amount_2", StringType),
      StructField("chg_amount_2", StringType),
      StructField("fu_measure_id_2", StringType),
      StructField("oper_type_fu_2", StringType),
      StructField("fu_own_type_3", StringType),
      StructField("fu_own_id_3", StringType),
      StructField("free_unit_id_3", StringType),
      StructField("free_unit_type_3", StringType),
      StructField("cur_amount_3", StringType),
      StructField("chg_amount_3", StringType),
      StructField("fu_measure_id_3", StringType),
      StructField("oper_type_fu_3", StringType),
      StructField("fu_own_type_4", StringType),
      StructField("fu_own_id_4", StringType),
      StructField("free_unit_id_4", StringType),
      StructField("free_unit_type_4", StringType),
      StructField("cur_amount_4", StringType),
      StructField("chg_amount_4", StringType),
      StructField("fu_measure_id_4", StringType),
      StructField("oper_type_fu_4", StringType),
      StructField("fu_own_type_5", StringType),
      StructField("fu_own_id_5", StringType),
      StructField("free_unit_id_5", StringType),
      StructField("free_unit_type_5", StringType),
      StructField("cur_amount_5", StringType),
      StructField("chg_amount_5", StringType),
      StructField("fu_measure_id_5", StringType),
      StructField("oper_type_fu_5", StringType),
      StructField("fu_own_type_6", StringType),
      StructField("fu_own_id_6", StringType),
      StructField("free_unit_id_6", StringType),
      StructField("free_unit_type_6", StringType),
      StructField("cur_amount_6", StringType),
      StructField("chg_amount_6", StringType),
      StructField("fu_measure_id_6", StringType),
      StructField("oper_type_fu_6", StringType),
      StructField("fu_own_type_7", StringType),
      StructField("fu_own_id_7", StringType),
      StructField("free_unit_id_7", StringType),
      StructField("free_unit_type_7", StringType),
      StructField("cur_amount_7", StringType),
      StructField("chg_amount_7", StringType),
      StructField("fu_measure_id_7", StringType),
      StructField("oper_type_fu_7", StringType),
      StructField("fu_own_type_8", StringType),
      StructField("fu_own_id_8", StringType),
      StructField("free_unit_id_8", StringType),
      StructField("free_unit_type_8", StringType),
      StructField("cur_amount_8", StringType),
      StructField("chg_amount_8", StringType),
      StructField("fu_measure_id_8", StringType),
      StructField("oper_type_fu_8", StringType),
      StructField("fu_own_type_9", StringType),
      StructField("fu_own_id_9", StringType),
      StructField("free_unit_id_9", StringType),
      StructField("free_unit_type_9", StringType),
      StructField("cur_amount_9", StringType),
      StructField("chg_amount_9", StringType),
      StructField("fu_measure_id_9", StringType),
      StructField("oper_type_fu_9", StringType),
      StructField("fu_own_type_10", StringType),
      StructField("fu_own_id_10", StringType),
      StructField("free_unit_id_10", StringType),
      StructField("free_unit_type_10", StringType),
      StructField("cur_amount_10", StringType),
      StructField("chg_amount_10", StringType),
      StructField("fu_measure_id_10", StringType),
      StructField("oper_type_fu_10", StringType),
      StructField("acct_id_ba_1", StringType),
      StructField("acct_balance_id_ba_1", StringType),
      StructField("balance_type_ba_1", StringType),
      StructField("bonus_amount_ba_1", StringType),
      StructField("current_balance_ba_1", StringType),
      StructField("currency_id_ba_1", StringType),
      StructField("oper_type_ba_1", StringType),
      StructField("acct_id_ba_2", StringType),
      StructField("acct_balance_id_ba_2", StringType),
      StructField("balance_type_ba_2", StringType),
      StructField("bonus_amount_ba_2", StringType),
      StructField("current_balance_ba_2", StringType),
      StructField("currency_id_ba_2", StringType),
      StructField("oper_type_ba_2", StringType),
      StructField("acct_id_ba_3", StringType),
      StructField("acct_balance_id_ba_3", StringType),
      StructField("balance_type_ba_3", StringType),
      StructField("bonus_amount_ba_3", StringType),
      StructField("current_balance_ba_3", StringType),
      StructField("currency_id_ba_3", StringType),
      StructField("oper_type_ba_3", StringType),
      StructField("acct_id_ba_4", StringType),
      StructField("acct_balance_id_ba_4", StringType),
      StructField("balance_type_ba_4", StringType),
      StructField("bonus_amount_ba_4", StringType),
      StructField("current_balance_ba_4", StringType),
      StructField("currency_id_ba_4", StringType),
      StructField("oper_type_ba_4", StringType),
      StructField("acct_id_ba_5", StringType),
      StructField("acct_balance_id_ba_5", StringType),
      StructField("balance_type_ba_5", StringType),
      StructField("bonus_amount_ba_5", StringType),
      StructField("current_balance_ba_5", StringType),
      StructField("currency_id_ba_5", StringType),
      StructField("oper_type_ba_5", StringType),
      StructField("acct_id_ba_6", StringType),
      StructField("acct_balance_id_ba_6", StringType),
      StructField("balance_type_ba_6", StringType),
      StructField("bonus_amount_ba_6", StringType),
      StructField("current_balance_ba_6", StringType),
      StructField("currency_id_ba_6", StringType),
      StructField("oper_type_ba_6", StringType),
      StructField("acct_id_ba_7", StringType),
      StructField("acct_balance_id_ba_7", StringType),
      StructField("balance_type_ba_7", StringType),
      StructField("bonus_amount_ba_7", StringType),
      StructField("current_balance_ba_7", StringType),
      StructField("currency_id_ba_7", StringType),
      StructField("oper_type_ba_7", StringType),
      StructField("acct_id_ba_8", StringType),
      StructField("acct_balance_id_ba_8", StringType),
      StructField("balance_type_ba_8", StringType),
      StructField("bonus_amount_ba_8", StringType),
      StructField("current_balance_ba_8", StringType),
      StructField("currency_id_ba_8", StringType),
      StructField("oper_type_ba_8", StringType),
      StructField("acct_id_ba_9", StringType),
      StructField("acct_balance_id_ba_9", StringType),
      StructField("balance_type_ba_9", StringType),
      StructField("bonus_amount_ba_9", StringType),
      StructField("current_balance_ba_9", StringType),
      StructField("currency_id_ba_9", StringType),
      StructField("oper_type_ba_9", StringType),
      StructField("acct_id_ba_10", StringType),
      StructField("acct_balance_id_ba_10", StringType),
      StructField("balance_type_ba_10", StringType),
      StructField("bonus_amount_ba_10", StringType),
      StructField("current_balance_ba_10", StringType),
      StructField("currency_id_ba_10", StringType),
      StructField("oper_type_ba_10", StringType),
      StructField("fu_own_type_bfu_1", StringType),
      StructField("fu_own_id_bfu_1", StringType),
      StructField("free_unit_type_bfu_1", StringType),
      StructField("free_unit_id_bfu_1", StringType),
      StructField("bonus_amount_bfu_1", StringType),
      StructField("current_amount_bfu_1", StringType),
      StructField("fu_measure_id_bfu_1", StringType),
      StructField("oper_type_bfu_1", StringType),
      StructField("fu_own_type_bfu_2", StringType),
      StructField("fu_own_id_bfu_2", StringType),
      StructField("free_unit_type_bfu_2", StringType),
      StructField("free_unit_id_bfu_2", StringType),
      StructField("bonus_amount_bfu_2", StringType),
      StructField("current_amount_bfu_2", StringType),
      StructField("fu_measure_id_bfu_2", StringType),
      StructField("oper_type_bfu_2", StringType),
      StructField("fu_own_type_bfu_3", StringType),
      StructField("fu_own_id_bfu_3", StringType),
      StructField("free_unit_type_bfu_3", StringType),
      StructField("free_unit_id_bfu_3", StringType),
      StructField("bonus_amount_bfu_3", StringType),
      StructField("current_amount_bfu_3", StringType),
      StructField("fu_measure_id_bfu_3", StringType),
      StructField("oper_type_bfu_3", StringType),
      StructField("fu_own_type_bfu_4", StringType),
      StructField("fu_own_id_bfu_4", StringType),
      StructField("free_unit_type_bfu_4", StringType),
      StructField("free_unit_id_bfu_4", StringType),
      StructField("bonus_amount_bfu_4", StringType),
      StructField("current_amount_bfu_4", StringType),
      StructField("fu_measure_id_bfu_4", StringType),
      StructField("oper_type_bfu_4", StringType),
      StructField("fu_own_type_bfu_5", StringType),
      StructField("fu_own_id_bfu_5", StringType),
      StructField("free_unit_type_bfu_5", StringType),
      StructField("free_unit_id_bfu_5", StringType),
      StructField("bonus_amount_bfu_5", StringType),
      StructField("current_amount_bfu_5", StringType),
      StructField("fu_measure_id_bfu_5", StringType),
      StructField("oper_type_bfu_5", StringType),
      StructField("fu_own_type_bfu_6", StringType),
      StructField("fu_own_id_bfu_6", StringType),
      StructField("free_unit_type_bfu_6", StringType),
      StructField("free_unit_id_bfu_6", StringType),
      StructField("bonus_amount_bfu_6", StringType),
      StructField("current_amount_bfu_6", StringType),
      StructField("fu_measure_id_bfu_6", StringType),
      StructField("oper_type_bfu_6", StringType),
      StructField("fu_own_type_bfu_7", StringType),
      StructField("fu_own_id_bfu_7", StringType),
      StructField("free_unit_type_bfu_7", StringType),
      StructField("free_unit_id_bfu_7", StringType),
      StructField("bonus_amount_bfu_7", StringType),
      StructField("current_amount_bfu_7", StringType),
      StructField("fu_measure_id_bfu_7", StringType),
      StructField("oper_type_bfu_7", StringType),
      StructField("fu_own_type_bfu_8", StringType),
      StructField("fu_own_id_bfu_8", StringType),
      StructField("free_unit_type_bfu_8", StringType),
      StructField("free_unit_id_bfu_8", StringType),
      StructField("bonus_amount_bfu_8", StringType),
      StructField("current_amount_bfu_8", StringType),
      StructField("fu_measure_id_bfu_8", StringType),
      StructField("oper_type_bfu_8", StringType),
      StructField("fu_own_type_bfu_9", StringType),
      StructField("fu_own_id_bfu_9", StringType),
      StructField("free_unit_type_bfu_9", StringType),
      StructField("free_unit_id_bfu_9", StringType),
      StructField("bonus_amount_bfu_9", StringType),
      StructField("current_amount_bfu_9", StringType),
      StructField("fu_measure_id_bfu_9", StringType),
      StructField("oper_type_bfu_9", StringType),
      StructField("fu_own_type_bfu_10", StringType),
      StructField("fu_own_id_bfu_10", StringType),
      StructField("free_unit_type_bfu_10", StringType),
      StructField("free_unit_id_bfu_10", StringType),
      StructField("bonus_amount_bfu_10", StringType),
      StructField("current_amount_bfu_10", StringType),
      StructField("fu_measure_id_bfu_10", StringType),
      StructField("oper_type_bfu_10", StringType),
      StructField("calling_party_number", StringType),
      StructField("apn", StringType),
      StructField("url", StringType),
      StructField("calling_party_imsi", StringType),
      StructField("access_network_address", StringType),
      StructField("ggsn_address", StringType),
      StructField("calling_roam_info", StringType),
      StructField("calling_cell_id", StringType),
      StructField("timestamp_of_sgsn", StringType),
      StructField("timezone_of_sgsn", StringType),
      StructField("bearer_capability", StringType),
      StructField("charging_time", StringType),
      StructField("total_flux", StringType),
      StructField("up_flux", StringType),
      StructField("down_flux", StringType),
      StructField("elapse_duration", StringType),
      StructField("imei", StringType),
      StructField("service_id", StringType),
      StructField("sp_id", StringType),
      StructField("category_id", StringType),
      StructField("content_id", StringType),
      StructField("qos", StringType),
      StructField("bearer_protocol_type", StringType),
      StructField("start_timestamp", StringType),
      StructField("stop_timestamp", StringType),
      StructField("charging_id", StringType),
      StructField("transition_id", StringType),
      StructField("service_level", StringType),
      StructField("brand_id", StringType),
      StructField("main_offering_id", StringType),
      StructField("charging_party_number", StringType),
      StructField("pay_type", StringType),
      StructField("charging_type", StringType),
      StructField("roam_state", StringType),
      StructField("calling_home_country_code", StringType),
      StructField("calling_home_area_number", StringType),
      StructField("calling_home_network_code", StringType),
      StructField("calling_roam_country_code", StringType),
      StructField("calling_roam_area_number", StringType),
      StructField("calling_roam_network_code", StringType),
      StructField("service_type", StringType),
      StructField("calling_network_type", StringType),
      StructField("calling_vpn_top_group_number", StringType),
      StructField("calling_vpn_group_number", StringType),
      StructField("online_charging_flag", StringType),
      StructField("start_time_of_billcycle", StringType),
      StructField("last_effect_offering", StringType),
      StructField("dt_discount", StringType),
      StructField("rating_group", StringType),
      StructField("home_zone_id", StringType),
      StructField("special_zone_id", StringType),
      StructField("data_zone_id", StringType),
      StructField("main_balance_info", StringType),
      StructField("chg_balance_info", StringType),
      StructField("chg_free_unit_info", StringType),
      StructField("user_state", StringType),
      StructField("group_pay_flag", StringType),
      StructField("rat_type", StringType),
      StructField("charge_party_indicator", StringType),
      StructField("roaming_zone_id", StringType),
      StructField("primary_offer_chg_amt", StringType),
      StructField("reserved_2", StringType),
      StructField("fu_charging_offer_id", StringType),
      StructField("fu_bonus_offer_id", StringType),
      StructField("filler", StringType),
      StructField("filename", StringType)
    )
  )

  def getTransformations: Map[String, Column] = Map(
    "cdr_id" -> col("cdr_id").cast(DecimalType(20, 0)),
    "cdr_sub_id" -> col("cdr_sub_id").cast(DecimalType(20, 0)),
    "cdr_type" -> col("cdr_type"),
    "split_cdr_reason" -> col("split_cdr_reason"),
    "cdr_batch_id" -> col("cdr_batch_id").cast(DecimalType(20, 0)),
    "src_rec_line_no" -> col("src_rec_line_no").cast(DecimalType(10, 0)),
    "src_cdr_id" -> col("src_cdr_id").cast(DecimalType(20, 0)),
    "src_cdr_no" -> col("src_cdr_no").cast(DecimalType(20, 0)),
    "status" -> col("status"),
    "re_rating_times" -> col("re_rating_times").cast(DecimalType(3, 0)),
    "create_date" -> expr(
      "from_unixtime(unix_timestamp(cast(create_date AS STRING), 'yyyyMMddHHmmss'))"
    ).cast("timestamp"),
    "start_date" -> expr(
      "from_unixtime(unix_timestamp(cast(start_date AS STRING), \"yyyyMMddHHmmss\"))"
    ).cast("timestamp"),
    "end_date" -> expr(
      "from_unixtime(unix_timestamp(cast(end_date AS STRING), \"yyyyMMddHHmmss\"))"
    ).cast("timestamp"),
    "cust_local_start_date" -> expr(
      "from_unixtime(unix_timestamp(cast(cust_local_start_date AS STRING), \"yyyyMMddHHmmss\"))"
    ).cast("timestamp"),
    "cust_local_end_date" -> expr(
      "from_unixtime(unix_timestamp(cast(cust_local_end_date AS STRING), \"yyyyMMddHHmmss\"))"
    ).cast("timestamp"),
    "std_evt_type_id" -> col("std_evt_type_id").cast(DecimalType(10, 0)),
    "evt_source_category" -> col("evt_source_category"),
    "obj_type" -> col("obj_type"),
    "obj_id" -> col("obj_id").cast(DecimalType(20, 0)),
    "owner_cust_id" -> col("owner_cust_id").cast(DecimalType(20, 0)),
    "default_acct_id" -> col("default_acct_id").cast(DecimalType(20, 0)),
    "pri_identity" -> col("pri_identity").cast("bigint"),
    "bill_cycle_id" -> col("bill_cycle_id").cast("int"),
    "service_category" -> col("service_category").cast("tinyint"),
    "usage_service_type" -> col("usage_service_type").cast("tinyint"),
    "session_id" -> col("session_id"),
    "main_node" -> split(col("session_id"), "\\.")(0).cast("string"),
    "session_id_serial_1" -> split(col("session_id"), ";")(1).cast("string"),
    "session_id_serial_2" -> split(col("session_id"), ";")(2).cast("string"),
    "session_id_serial_3" -> split(col("session_id"), "-")(1).cast("string"),
    "result_code" -> col("result_code").cast(DecimalType(10, 0)),
    "result_reason" -> col("result_reason"),
    "hot_seq" -> col("hot_seq").cast(DecimalType(10, 0)),
    "cp_id" -> col("cp_id").cast(DecimalType(10, 0)),
    "recipient_number" -> col("recipient_number").cast("bigint"),
    "usage_measure_id" -> col("usage_measure_id").cast(DecimalType(10, 0)),
    "actual_usage" -> col("actual_usage").cast(DecimalType(20, 0)),
    "rate_usage" -> col("rate_usage").cast(DecimalType(20, 0)),
    "service_unit_type" -> col("service_unit_type").cast(DecimalType(20, 0)),
    "usage_measure_id_2" -> col("usage_measure_id_2").cast(DecimalType(10, 0)),
    "actual_usage_2" -> col("actual_usage_2").cast(DecimalType(20, 0)),
    "rate_usage_2" -> col("rate_usage_2").cast(DecimalType(20, 0)),
    "service_unit_type_2" -> col("service_unit_type_2").cast(
      DecimalType(10, 0)
    ),
    "debit_amount" -> col("debit_amount").cast(DecimalType(20, 0)),
    "reserved_1" -> col("reserved_1").cast(DecimalType(20, 0)),
    "debit_from_prepaid" -> col("debit_from_prepaid").cast(DecimalType(20, 0)),
    "debit_from_advance_prepaid" -> col("debit_from_advance_prepaid").cast(
      DecimalType(20, 0)
    ),
    "debit_from_postpaid" -> col("debit_from_postpaid").cast(
      DecimalType(20, 0)
    ),
    "debit_from_advance_postpaid" -> col("debit_from_advance_postpaid").cast(
      DecimalType(20, 0)
    ),
    "debit_from_credit_postpaid" -> col("debit_from_credit_postpaid").cast(
      DecimalType(20, 0)
    ),
    "total_tax" -> col("total_tax").cast(DecimalType(20, 0)),
    "free_unit_amount_of_times" -> col("free_unit_amount_of_times").cast(
      DecimalType(20, 0)
    ),
    "free_unit_amount_of_duration" -> col("free_unit_amount_of_duration").cast(
      DecimalType(20, 0)
    ),
    "free_unit_amount_of_flux" -> col("free_unit_amount_of_flux").cast(
      DecimalType(20, 0)
    ),
    "acct_id_1" -> col("acct_id_1").cast(DecimalType(20, 0)),
    "acct_balance_id_1" -> col("acct_balance_id_1").cast(DecimalType(20, 0)),
    "balance_type_1" -> col("balance_type_1").cast(DecimalType(20, 0)),
    "cur_balance_1" -> col("cur_balance_1").cast(DecimalType(20, 0)),
    "chg_balance_1" -> col("chg_balance_1").cast(DecimalType(20, 0)),
    "currency_id_1" -> col("currency_id_1").cast(DecimalType(10, 0)),
    "oper_type_acct_1" -> col("oper_type_acct_1").cast(DecimalType(10, 0)),
    "acct_id_2" -> col("acct_id_2").cast(DecimalType(20, 0)),
    "acct_balance_id_2" -> col("acct_balance_id_2").cast(DecimalType(20, 0)),
    "balance_type_2" -> col("balance_type_2").cast(DecimalType(20, 0)),
    "cur_balance_2" -> col("cur_balance_2").cast(DecimalType(20, 0)),
    "chg_balance_2" -> col("chg_balance_2").cast(DecimalType(20, 0)),
    "currency_id_2" -> col("currency_id_2").cast(DecimalType(10, 0)),
    "oper_type_acct_2" -> col("oper_type_acct_2").cast(DecimalType(10, 0)),
    "acct_id_3" -> col("acct_id_3").cast(DecimalType(20, 0)),
    "acct_balance_id_3" -> col("acct_balance_id_3").cast(DecimalType(20, 0)),
    "balance_type_3" -> col("balance_type_3").cast(DecimalType(20, 0)),
    "cur_balance_3" -> col("cur_balance_3").cast(DecimalType(20, 0)),
    "chg_balance_3" -> col("chg_balance_3").cast(DecimalType(20, 0)),
    "currency_id_3" -> col("currency_id_3").cast(DecimalType(10, 0)),
    "oper_type_acct_3" -> col("oper_type_acct_3").cast(DecimalType(10, 0)),
    "acct_id_4" -> col("acct_id_4").cast(DecimalType(20, 0)),
    "acct_balance_id_4" -> col("acct_balance_id_4").cast(DecimalType(20, 0)),
    "balance_type_4" -> col("balance_type_4").cast(DecimalType(20, 0)),
    "cur_balance_4" -> col("cur_balance_4").cast(DecimalType(20, 0)),
    "chg_balance_4" -> col("chg_balance_4").cast(DecimalType(20, 0)),
    "currency_id_4" -> col("currency_id_4").cast(DecimalType(10, 0)),
    "oper_type_acct_4" -> col("oper_type_acct_4").cast(DecimalType(10, 0)),
    "acct_id_5" -> col("acct_id_5").cast(DecimalType(20, 0)),
    "acct_balance_id_5" -> col("acct_balance_id_5").cast(DecimalType(20, 0)),
    "balance_type_5" -> col("balance_type_5").cast(DecimalType(20, 0)),
    "cur_balance_5" -> col("cur_balance_5").cast(DecimalType(20, 0)),
    "chg_balance_5" -> col("chg_balance_5").cast(DecimalType(20, 0)),
    "currency_id_5" -> col("currency_id_5").cast(DecimalType(10, 0)),
    "oper_type_acct_5" -> col("oper_type_acct_5").cast(DecimalType(10, 0)),
    "acct_id_6" -> col("acct_id_6").cast(DecimalType(20, 0)),
    "acct_balance_id_6" -> col("acct_balance_id_6").cast(DecimalType(20, 0)),
    "balance_type_6" -> col("balance_type_6").cast(DecimalType(20, 0)),
    "cur_balance_6" -> col("cur_balance_6").cast(DecimalType(20, 0)),
    "chg_balance_6" -> col("chg_balance_6").cast(DecimalType(20, 0)),
    "currency_id_6" -> col("currency_id_6").cast(DecimalType(10, 0)),
    "oper_type_acct_6" -> col("oper_type_acct_6").cast(DecimalType(10, 0)),
    "acct_id_7" -> col("acct_id_7").cast(DecimalType(20, 0)),
    "acct_balance_id_7" -> col("acct_balance_id_7").cast(DecimalType(20, 0)),
    "balance_type_7" -> col("balance_type_7").cast(DecimalType(20, 0)),
    "cur_balance_7" -> col("cur_balance_7").cast(DecimalType(20, 0)),
    "chg_balance_7" -> col("chg_balance_7").cast(DecimalType(20, 0)),
    "currency_id_7" -> col("currency_id_7").cast(DecimalType(10, 0)),
    "oper_type_acct_7" -> col("oper_type_acct_7").cast(DecimalType(10, 0)),
    "acct_id_8" -> col("acct_id_8").cast(DecimalType(20, 0)),
    "acct_balance_id_8" -> col("acct_balance_id_8").cast(DecimalType(20, 0)),
    "balance_type_8" -> col("balance_type_8").cast(DecimalType(20, 0)),
    "cur_balance_8" -> col("cur_balance_8").cast(DecimalType(20, 0)),
    "chg_balance_8" -> col("chg_balance_8").cast(DecimalType(20, 0)),
    "currency_id_8" -> col("currency_id_8").cast(DecimalType(10, 0)),
    "oper_type_acct_8" -> col("oper_type_acct_8").cast(DecimalType(10, 0)),
    "acct_id_9" -> col("acct_id_9").cast(DecimalType(20, 0)),
    "acct_balance_id_9" -> col("acct_balance_id_9").cast(DecimalType(20, 0)),
    "balance_type_9" -> col("balance_type_9").cast(DecimalType(20, 0)),
    "cur_balance_9" -> col("cur_balance_9").cast(DecimalType(20, 0)),
    "chg_balance_9" -> col("chg_balance_9").cast(DecimalType(20, 0)),
    "currency_id_9" -> col("currency_id_9").cast(DecimalType(10, 0)),
    "oper_type_acct_9" -> col("oper_type_acct_9").cast(DecimalType(10, 0)),
    "acct_id_10" -> col("acct_id_10").cast(DecimalType(20, 0)),
    "acct_balance_id_10" -> col("acct_balance_id_10").cast(DecimalType(20, 0)),
    "balance_type_10" -> col("balance_type_10").cast(DecimalType(20, 0)),
    "cur_balance_10" -> col("cur_balance_10").cast(DecimalType(20, 0)),
    "chg_balance_10" -> col("chg_balance_10").cast(DecimalType(20, 0)),
    "currency_id_10" -> col("currency_id_10").cast(DecimalType(10, 0)),
    "oper_type_acct_10" -> col("oper_type_acct_10").cast(DecimalType(10, 0)),
    "fu_own_type_1" -> col("fu_own_type_1").cast(StringType),
    "fu_own_id_1" -> col("fu_own_id_1").cast(DecimalType(20, 0)),
    "free_unit_id_1" -> col("free_unit_id_1").cast(DecimalType(20, 0)),
    "free_unit_type_1" -> col("free_unit_type_1").cast(DecimalType(20, 0)),
    "cur_amount_1" -> col("cur_amount_1").cast(DecimalType(20, 0)),
    "chg_amount_1" -> col("chg_amount_1").cast(DecimalType(20, 0)),
    "fu_measure_id_1" -> col("fu_measure_id_1").cast(DecimalType(10, 0)),
    "oper_type_fu_1" -> col("oper_type_fu_1").cast(DecimalType(10, 0)),
    "fu_own_type_2" -> col("fu_own_type_2").cast(StringType),
    "fu_own_id_2" -> col("fu_own_id_2").cast(DecimalType(20, 0)),
    "free_unit_id_2" -> col("free_unit_id_2").cast(DecimalType(20, 0)),
    "free_unit_type_2" -> col("free_unit_type_2").cast(DecimalType(20, 0)),
    "cur_amount_2" -> col("cur_amount_2").cast(DecimalType(20, 0)),
    "chg_amount_2" -> col("chg_amount_2").cast(DecimalType(20, 0)),
    "fu_measure_id_2" -> col("fu_measure_id_2").cast(DecimalType(10, 0)),
    "oper_type_fu_2" -> col("oper_type_fu_2").cast(DecimalType(10, 0)),
    "fu_own_type_3" -> col("fu_own_type_3").cast(StringType),
    "fu_own_id_3" -> col("fu_own_id_3").cast(DecimalType(20, 0)),
    "free_unit_id_3" -> col("free_unit_id_3").cast(DecimalType(20, 0)),
    "free_unit_type_3" -> col("free_unit_type_3").cast(DecimalType(20, 0)),
    "cur_amount_3" -> col("cur_amount_3").cast(DecimalType(20, 0)),
    "chg_amount_3" -> col("chg_amount_3").cast(DecimalType(20, 0)),
    "fu_measure_id_3" -> col("fu_measure_id_3").cast(DecimalType(10, 0)),
    "oper_type_fu_3" -> col("oper_type_fu_3").cast(DecimalType(10, 0)),
    "fu_own_type_4" -> col("fu_own_type_4").cast(StringType),
    "fu_own_id_4" -> col("fu_own_id_4").cast(DecimalType(20, 0)),
    "free_unit_id_4" -> col("free_unit_id_4").cast(DecimalType(20, 0)),
    "free_unit_type_4" -> col("free_unit_type_4").cast(DecimalType(20, 0)),
    "cur_amount_4" -> col("cur_amount_4").cast(DecimalType(20, 0)),
    "chg_amount_4" -> col("chg_amount_4").cast(DecimalType(20, 0)),
    "fu_measure_id_4" -> col("fu_measure_id_4").cast(DecimalType(10, 0)),
    "oper_type_fu_4" -> col("oper_type_fu_4").cast(DecimalType(10, 0)),
    "fu_own_type_5" -> col("fu_own_type_5").cast(StringType),
    "fu_own_id_5" -> col("fu_own_id_5").cast(DecimalType(20, 0)),
    "free_unit_id_5" -> col("free_unit_id_5").cast(DecimalType(20, 0)),
    "free_unit_type_5" -> col("free_unit_type_5").cast(DecimalType(20, 0)),
    "cur_amount_5" -> col("cur_amount_5").cast(DecimalType(20, 0)),
    "chg_amount_5" -> col("chg_amount_5").cast(DecimalType(20, 0)),
    "fu_measure_id_5" -> col("fu_measure_id_5").cast(DecimalType(10, 0)),
    "oper_type_fu_5" -> col("oper_type_fu_5").cast(DecimalType(10, 0)),
    "fu_own_type_6" -> col("fu_own_type_6").cast(StringType),
    "fu_own_id_6" -> col("fu_own_id_6").cast(DecimalType(20, 0)),
    "free_unit_id_6" -> col("free_unit_id_6").cast(DecimalType(20, 0)),
    "free_unit_type_6" -> col("free_unit_type_6").cast(DecimalType(20, 0)),
    "cur_amount_6" -> col("cur_amount_6").cast(DecimalType(20, 0)),
    "chg_amount_6" -> col("chg_amount_6").cast(DecimalType(20, 0)),
    "fu_measure_id_6" -> col("fu_measure_id_6").cast(DecimalType(10, 0)),
    "oper_type_fu_6" -> col("oper_type_fu_6").cast(DecimalType(10, 0)),
    "fu_own_type_7" -> col("fu_own_type_7").cast(StringType),
    "fu_own_id_7" -> col("fu_own_id_7").cast(DecimalType(20, 0)),
    "free_unit_id_7" -> col("free_unit_id_7").cast(DecimalType(20, 0)),
    "free_unit_type_7" -> col("free_unit_type_7").cast(DecimalType(20, 0)),
    "cur_amount_7" -> col("cur_amount_7").cast(DecimalType(20, 0)),
    "chg_amount_7" -> col("chg_amount_7").cast(DecimalType(20, 0)),
    "fu_measure_id_7" -> col("fu_measure_id_7").cast(DecimalType(10, 0)),
    "oper_type_fu_7" -> col("oper_type_fu_7").cast(DecimalType(10, 0)),
    "fu_own_type_8" -> col("fu_own_type_8").cast(StringType),
    "fu_own_id_8" -> col("fu_own_id_8").cast(DecimalType(20, 0)),
    "free_unit_id_8" -> col("free_unit_id_8").cast(DecimalType(20, 0)),
    "free_unit_type_8" -> col("free_unit_type_8").cast(DecimalType(20, 0)),
    "cur_amount_8" -> col("cur_amount_8").cast(DecimalType(20, 0)),
    "chg_amount_8" -> col("chg_amount_8").cast(DecimalType(20, 0)),
    "fu_measure_id_8" -> col("fu_measure_id_8").cast(DecimalType(10, 0)),
    "oper_type_fu_8" -> col("oper_type_fu_8").cast(DecimalType(10, 0)),
    "fu_own_type_9" -> col("fu_own_type_9").cast(StringType),
    "fu_own_id_9" -> col("fu_own_id_9").cast(DecimalType(20, 0)),
    "free_unit_id_9" -> col("free_unit_id_9").cast(DecimalType(20, 0)),
    "free_unit_type_9" -> col("free_unit_type_9").cast(DecimalType(20, 0)),
    "cur_amount_9" -> col("cur_amount_9").cast(DecimalType(20, 0)),
    "chg_amount_9" -> col("chg_amount_9").cast(DecimalType(20, 0)),
    "fu_measure_id_9" -> col("fu_measure_id_9").cast(DecimalType(10, 0)),
    "oper_type_fu_9" -> col("oper_type_fu_9").cast(DecimalType(10, 0)),
    "fu_own_id_10" -> col("fu_own_id_10").cast(DecimalType(20, 0)),
    "free_unit_id_10" -> col("free_unit_id_10").cast(DecimalType(20, 0)),
    "free_unit_type_10" -> col("free_unit_type_10").cast(DecimalType(20, 0)),
    "cur_amount_10" -> col("cur_amount_10").cast(DecimalType(20, 0)),
    "chg_amount_10" -> col("chg_amount_10").cast(DecimalType(20, 0)),
    "fu_measure_id_10" -> col("fu_measure_id_10").cast(DecimalType(10, 0)),
    "oper_type_fu_10" -> col("oper_type_fu_10").cast(DecimalType(10, 0)),
    "acct_id_ba_1" -> col("acct_id_ba_1").cast(DecimalType(20, 0)),
    "acct_balance_id_ba_1" -> col("acct_balance_id_ba_1").cast(
      DecimalType(20, 0)
    ),
    "balance_type_ba_1" -> col("balance_type_ba_1").cast(DecimalType(20, 0)),
    "bonus_amount_ba_1" -> col("bonus_amount_ba_1").cast(DecimalType(20, 0)),
    "current_balance_ba_1" -> col("current_balance_ba_1").cast(
      DecimalType(20, 0)
    ),
    "currency_id_ba_1" -> col("currency_id_ba_1").cast(DecimalType(10, 0)),
    "oper_type_ba_1" -> col("oper_type_ba_1").cast(DecimalType(10, 0)),
    "acct_id_ba_2" -> col("acct_id_ba_2").cast(DecimalType(20, 0)),
    "acct_balance_id_ba_2" -> col("acct_balance_id_ba_2").cast(
      DecimalType(20, 0)
    ),
    "balance_type_ba_2" -> col("balance_type_ba_2").cast(DecimalType(20, 0)),
    "bonus_amount_ba_2" -> col("bonus_amount_ba_2").cast(DecimalType(20, 0)),
    "current_balance_ba_2" -> col("current_balance_ba_2").cast(
      DecimalType(20, 0)
    ),
    "currency_id_ba_2" -> col("currency_id_ba_2").cast(DecimalType(10, 0)),
    "oper_type_ba_2" -> col("oper_type_ba_2").cast(DecimalType(10, 0)),
    "acct_id_ba_3" -> col("acct_id_ba_3").cast(DecimalType(20, 0)),
    "acct_balance_id_ba_3" -> col("acct_balance_id_ba_3").cast(
      DecimalType(20, 0)
    ),
    "balance_type_ba_3" -> col("balance_type_ba_3").cast(DecimalType(20, 0)),
    "bonus_amount_ba_3" -> col("bonus_amount_ba_3").cast(DecimalType(20, 0)),
    "current_balance_ba_3" -> col("current_balance_ba_3").cast(
      DecimalType(20, 0)
    ),
    "currency_id_ba_3" -> col("currency_id_ba_3").cast(DecimalType(10, 0)),
    "oper_type_ba_3" -> col("oper_type_ba_3").cast(DecimalType(10, 0)),
    "acct_id_ba_4" -> col("acct_id_ba_4").cast(DecimalType(20, 0)),
    "acct_balance_id_ba_4" -> col("acct_balance_id_ba_4").cast(
      DecimalType(20, 0)
    ),
    "balance_type_ba_4" -> col("balance_type_ba_4").cast(DecimalType(20, 0)),
    "bonus_amount_ba_4" -> col("bonus_amount_ba_4").cast(DecimalType(20, 0)),
    "current_balance_ba_4" -> col("current_balance_ba_4").cast(
      DecimalType(20, 0)
    ),
    "currency_id_ba_4" -> col("currency_id_ba_4").cast(DecimalType(10, 0)),
    "oper_type_ba_4" -> col("oper_type_ba_4").cast(DecimalType(10, 0)),
    "acct_id_ba_5" -> col("acct_id_ba_5").cast(DecimalType(20, 0)),
    "acct_balance_id_ba_5" -> col("acct_balance_id_ba_5").cast(
      DecimalType(20, 0)
    ),
    "balance_type_ba_5" -> col("balance_type_ba_5").cast(DecimalType(20, 0)),
    "bonus_amount_ba_5" -> col("bonus_amount_ba_5").cast(DecimalType(20, 0)),
    "current_balance_ba_5" -> col("current_balance_ba_5").cast(
      DecimalType(20, 0)
    ),
    "currency_id_ba_5" -> col("currency_id_ba_5").cast(DecimalType(10, 0)),
    "oper_type_ba_5" -> col("oper_type_ba_5").cast(DecimalType(10, 0)),
    "acct_id_ba_6" -> col("acct_id_ba_6").cast(DecimalType(20, 0)),
    "acct_balance_id_ba_6" -> col("acct_balance_id_ba_6").cast(
      DecimalType(20, 0)
    ),
    "balance_type_ba_6" -> col("balance_type_ba_6").cast(DecimalType(20, 0)),
    "bonus_amount_ba_6" -> col("bonus_amount_ba_6").cast(DecimalType(20, 0)),
    "current_balance_ba_6" -> col("current_balance_ba_6").cast(
      DecimalType(20, 0)
    ),
    "currency_id_ba_6" -> col("currency_id_ba_6").cast(DecimalType(10, 0)),
    "oper_type_ba_6" -> col("oper_type_ba_6").cast(DecimalType(10, 0)),
    "acct_id_ba_7" -> col("acct_id_ba_7").cast(DecimalType(20, 0)),
    "acct_balance_id_ba_7" -> col("acct_balance_id_ba_7").cast(
      DecimalType(20, 0)
    ),
    "balance_type_ba_7" -> col("balance_type_ba_7").cast(DecimalType(20, 0)),
    "bonus_amount_ba_7" -> col("bonus_amount_ba_7").cast(DecimalType(20, 0)),
    "current_balance_ba_7" -> col("current_balance_ba_7").cast(
      DecimalType(20, 0)
    ),
    "currency_id_ba_7" -> col("currency_id_ba_7").cast(DecimalType(10, 0)),
    "oper_type_ba_7" -> col("oper_type_ba_7").cast(DecimalType(10, 0)),
    "acct_id_ba_8" -> col("acct_id_ba_8").cast(DecimalType(20, 0)),
    "acct_balance_id_ba_8" -> col("acct_balance_id_ba_8").cast(
      DecimalType(20, 0)
    ),
    "balance_type_ba_8" -> col("balance_type_ba_8").cast(DecimalType(20, 0)),
    "bonus_amount_ba_8" -> col("bonus_amount_ba_8").cast(DecimalType(20, 0)),
    "current_balance_ba_8" -> col("current_balance_ba_8").cast(
      DecimalType(20, 0)
    ),
    "currency_id_ba_8" -> col("currency_id_ba_8").cast(DecimalType(10, 0)),
    "oper_type_ba_8" -> col("oper_type_ba_8").cast(DecimalType(10, 0)),
    "acct_id_ba_9" -> col("acct_id_ba_9").cast(DecimalType(20, 0)),
    "acct_balance_id_ba_9" -> col("acct_balance_id_ba_9").cast(
      DecimalType(20, 0)
    ),
    "balance_type_ba_9" -> col("balance_type_ba_9").cast(DecimalType(20, 0)),
    "bonus_amount_ba_9" -> col("bonus_amount_ba_9").cast(DecimalType(20, 0)),
    "current_balance_ba_9" -> col("current_balance_ba_9").cast(
      DecimalType(20, 0)
    ),
    "currency_id_ba_9" -> col("currency_id_ba_9").cast(DecimalType(10, 0)),
    "oper_type_ba_9" -> col("oper_type_ba_9").cast(DecimalType(10, 0)),
    "acct_id_ba_10" -> col("acct_id_ba_10").cast(DecimalType(20, 0)),
    "acct_balance_id_ba_10" -> col("acct_balance_id_ba_10").cast(
      DecimalType(20, 0)
    ),
    "balance_type_ba_10" -> col("balance_type_ba_10").cast(DecimalType(20, 0)),
    "bonus_amount_ba_10" -> col("bonus_amount_ba_10").cast(DecimalType(20, 0)),
    "current_balance_ba_10" -> col("current_balance_ba_10").cast(
      DecimalType(20, 0)
    ),
    "currency_id_ba_10" -> col("currency_id_ba_10").cast(DecimalType(10, 0)),
    "oper_type_ba_10" -> col("oper_type_ba_10").cast(DecimalType(10, 0)),
    "fu_own_type_bfu_1" -> col("fu_own_type_bfu_1"),
    "fu_own_id_bfu_1" -> col("fu_own_id_bfu_1").cast(DecimalType(20, 0)),
    "free_unit_type_bfu_1" -> col("free_unit_type_bfu_1").cast(
      DecimalType(20, 0)
    ),
    "free_unit_id_bfu_1" -> col("free_unit_id_bfu_1").cast(DecimalType(20, 0)),
    "bonus_amount_bfu_1" -> col("bonus_amount_bfu_1").cast(DecimalType(20, 0)),
    "current_amount_bfu_1" -> col("current_amount_bfu_1").cast(
      DecimalType(20, 0)
    ),
    "fu_measure_id_bfu_1" -> col("fu_measure_id_bfu_1").cast(
      DecimalType(10, 0)
    ),
    "oper_type_bfu_1" -> col("oper_type_bfu_1").cast(DecimalType(10, 0)),
    "fu_own_type_bfu_2" -> col("fu_own_type_bfu_2"),
    "fu_own_id_bfu_2" -> col("fu_own_id_bfu_2").cast(DecimalType(20, 0)),
    "free_unit_type_bfu_2" -> col("free_unit_type_bfu_2").cast(
      DecimalType(20, 0)
    ),
    "free_unit_id_bfu_2" -> col("free_unit_id_bfu_2").cast(DecimalType(20, 0)),
    "bonus_amount_bfu_2" -> col("bonus_amount_bfu_2").cast(DecimalType(20, 0)),
    "current_amount_bfu_2" -> col("current_amount_bfu_2").cast(
      DecimalType(20, 0)
    ),
    "fu_measure_id_bfu_2" -> col("fu_measure_id_bfu_2").cast(
      DecimalType(10, 0)
    ),
    "oper_type_bfu_2" -> col("oper_type_bfu_2").cast(DecimalType(10, 0)),
    "fu_own_type_bfu_3" -> col("fu_own_type_bfu_3"),
    "fu_own_id_bfu_3" -> col("fu_own_id_bfu_3").cast(DecimalType(20, 0)),
    "free_unit_type_bfu_3" -> col("free_unit_type_bfu_3").cast(
      DecimalType(20, 0)
    ),
    "free_unit_id_bfu_3" -> col("free_unit_id_bfu_3").cast(DecimalType(20, 0)),
    "bonus_amount_bfu_3" -> col("bonus_amount_bfu_3").cast(DecimalType(20, 0)),
    "current_amount_bfu_3" -> col("current_amount_bfu_3").cast(
      DecimalType(20, 0)
    ),
    "fu_measure_id_bfu_3" -> col("fu_measure_id_bfu_3").cast(
      DecimalType(10, 0)
    ),
    "oper_type_bfu_3" -> col("oper_type_bfu_3").cast(DecimalType(10, 0)),
    "fu_own_type_bfu_4" -> col("fu_own_type_bfu_4"),
    "fu_own_id_bfu_4" -> col("fu_own_id_bfu_4").cast(DecimalType(20, 0)),
    "free_unit_type_bfu_4" -> col("free_unit_type_bfu_4").cast(
      DecimalType(20, 0)
    ),
    "free_unit_id_bfu_4" -> col("free_unit_id_bfu_4").cast(DecimalType(20, 0)),
    "bonus_amount_bfu_4" -> col("bonus_amount_bfu_4").cast(DecimalType(20, 0)),
    "current_amount_bfu_4" -> col("current_amount_bfu_4").cast(
      DecimalType(20, 0)
    ),
    "fu_measure_id_bfu_4" -> col("fu_measure_id_bfu_4").cast(
      DecimalType(10, 0)
    ),
    "oper_type_bfu_4" -> col("oper_type_bfu_4").cast(DecimalType(10, 0)),
    "fu_own_type_bfu_5" -> col("fu_own_type_bfu_5"),
    "fu_own_id_bfu_5" -> col("fu_own_id_bfu_5").cast(DecimalType(20, 0)),
    "free_unit_type_bfu_5" -> col("free_unit_type_bfu_5").cast(
      DecimalType(20, 0)
    ),
    "free_unit_id_bfu_5" -> col("free_unit_id_bfu_5").cast(DecimalType(20, 0)),
    "bonus_amount_bfu_5" -> col("bonus_amount_bfu_5").cast(DecimalType(20, 0)),
    "current_amount_bfu_5" -> col("current_amount_bfu_5").cast(
      DecimalType(20, 0)
    ),
    "fu_measure_id_bfu_5" -> col("fu_measure_id_bfu_5").cast(
      DecimalType(10, 0)
    ),
    "oper_type_bfu_5" -> col("oper_type_bfu_5").cast(DecimalType(10, 0)),
    "fu_own_type_bfu_6" -> col("fu_own_type_bfu_6"),
    "fu_own_id_bfu_6" -> col("fu_own_id_bfu_6").cast(DecimalType(20, 0)),
    "free_unit_type_bfu_6" -> col("free_unit_type_bfu_6").cast(
      DecimalType(20, 0)
    ),
    "free_unit_id_bfu_6" -> col("free_unit_id_bfu_6").cast(DecimalType(20, 0)),
    "bonus_amount_bfu_6" -> col("bonus_amount_bfu_6").cast(DecimalType(20, 0)),
    "current_amount_bfu_6" -> col("current_amount_bfu_6").cast(
      DecimalType(20, 0)
    ),
    "fu_measure_id_bfu_6" -> col("fu_measure_id_bfu_6").cast(
      DecimalType(10, 0)
    ),
    "oper_type_bfu_6" -> col("oper_type_bfu_6").cast(DecimalType(10, 0)),
    "fu_own_type_bfu_7" -> col("fu_own_type_bfu_7"),
    "fu_own_id_bfu_7" -> col("fu_own_id_bfu_7").cast(DecimalType(20, 0)),
    "free_unit_type_bfu_7" -> col("free_unit_type_bfu_7").cast(
      DecimalType(20, 0)
    ),
    "free_unit_id_bfu_7" -> col("free_unit_id_bfu_7").cast(DecimalType(20, 0)),
    "bonus_amount_bfu_7" -> col("bonus_amount_bfu_7").cast(DecimalType(20, 0)),
    "current_amount_bfu_7" -> col("current_amount_bfu_7").cast(
      DecimalType(20, 0)
    ),
    "fu_measure_id_bfu_7" -> col("fu_measure_id_bfu_7").cast(
      DecimalType(10, 0)
    ),
    "oper_type_bfu_7" -> col("oper_type_bfu_7").cast(DecimalType(10, 0)),
    "fu_own_type_bfu_8" -> col("fu_own_type_bfu_8"),
    "fu_own_id_bfu_8" -> col("fu_own_id_bfu_8").cast(DecimalType(20, 0)),
    "free_unit_type_bfu_8" -> col("free_unit_type_bfu_8").cast(
      DecimalType(20, 0)
    ),
    "free_unit_id_bfu_8" -> col("free_unit_id_bfu_8").cast(DecimalType(20, 0)),
    "bonus_amount_bfu_8" -> col("bonus_amount_bfu_8").cast(DecimalType(20, 0)),
    "current_amount_bfu_8" -> col("current_amount_bfu_8").cast(
      DecimalType(20, 0)
    ),
    "fu_measure_id_bfu_8" -> col("fu_measure_id_bfu_8").cast(
      DecimalType(10, 0)
    ),
    "oper_type_bfu_8" -> col("oper_type_bfu_8").cast(DecimalType(10, 0)),
    "fu_own_type_bfu_9" -> col("fu_own_type_bfu_9"),
    "fu_own_id_bfu_9" -> col("fu_own_id_bfu_9").cast(DecimalType(20, 0)),
    "free_unit_type_bfu_9" -> col("free_unit_type_bfu_9").cast(
      DecimalType(20, 0)
    ),
    "free_unit_id_bfu_9" -> col("free_unit_id_bfu_9").cast(DecimalType(20, 0)),
    "bonus_amount_bfu_9" -> col("bonus_amount_bfu_9").cast(DecimalType(20, 0)),
    "current_amount_bfu_9" -> col("current_amount_bfu_9").cast(
      DecimalType(20, 0)
    ),
    "fu_measure_id_bfu_9" -> col("fu_measure_id_bfu_9").cast(
      DecimalType(10, 0)
    ),
    "oper_type_bfu_9" -> col("oper_type_bfu_9").cast(DecimalType(10, 0)),
    "fu_own_type_bfu_10" -> col("fu_own_type_bfu_10"),
    "fu_own_id_bfu_10" -> col("fu_own_id_bfu_10").cast(DecimalType(20, 0)),
    "free_unit_type_bfu_10" -> col("free_unit_type_bfu_10").cast(
      DecimalType(20, 0)
    ),
    "free_unit_id_bfu_10" -> col("free_unit_id_bfu_10").cast(
      DecimalType(20, 0)
    ),
    "bonus_amount_bfu_10" -> col("bonus_amount_bfu_10").cast(
      DecimalType(20, 0)
    ),
    "current_amount_bfu_10" -> col("current_amount_bfu_10").cast(
      DecimalType(20, 0)
    ),
    "fu_measure_id_bfu_10" -> col("fu_measure_id_bfu_10").cast(
      DecimalType(10, 0)
    ),
    "oper_type_bfu_10" -> col("oper_type_bfu_10").cast(DecimalType(10, 0)),
    "calling_party_number" -> col("calling_party_number").cast("bigint"),
    "apn" -> col("apn"),
    "url" -> col("url"),
    "calling_party_imsi" -> col("calling_party_imsi").cast("bigint"),
    "access_network_address" -> col("access_network_address"),
    "ggsn_address" -> col("ggsn_address"),
    "calling_roam_info" -> col("calling_roam_info").cast("int"),
    "calling_cell_id" -> col("calling_cell_id"),
    "tai" -> substring(col("calling_cell_id"), 1, 16),
    "mcc_tai" -> substring(col("calling_cell_id"), 1, 3).cast("smallint"),
    "mnc_tai" -> substring(col("calling_cell_id"), 4, 3).cast("smallint"),
    "tac" -> substring(col("calling_cell_id"), 7, 10),
    "ecgi" -> substring(col("calling_cell_id"), 17, 16),
    "mcc_ecgi" -> substring(col("calling_cell_id"), 17, 3).cast("smallint"),
    "mnc_ecgi" -> substring(col("calling_cell_id"), 20, 3).cast("smallint"),
    "eci" -> substring(col("calling_cell_id"), 25, 8).cast(DecimalType(10, 0)),
    "enodeb" -> conv(
      substring(
        lpad(hex(col("calling_cell_id").cast("int")), 7, "0"),
        1,
        5
      ),
      16,
      10
    ).cast("int"),
    "cell_id" -> conv(
      substring(
        lpad(hex(col("calling_cell_id").cast("int")), 7, "0"),
        6,
        2
      ),
      16,
      10
    ).cast("smallint"),
    "timestamp_of_sgsn" -> expr(
      "from_unixtime(unix_timestamp(cast(timestamp_of_sgsn AS STRING), 'yyyyMMddHHmmss'))"
    ).cast("timestamp"),
    "timezone_of_sgsn" -> col("timezone_of_sgsn").cast(DecimalType(10, 0)),
    "bearer_capability" -> col("bearer_capability"),
    "charging_time" -> expr(
      "from_unixtime(unix_timestamp(cast(charging_time AS STRING), 'yyyyMMddHHmmss'))"
    ).cast("timestamp"),
    "total_flux" -> col("total_flux").cast(DecimalType(20, 0)),
    "up_flux" -> col("up_flux").cast(DecimalType(20, 0)),
    "down_flux" -> col("down_flux").cast(DecimalType(20, 0)),
    "elapse_duration" -> col("elapse_duration").cast(DecimalType(10, 0)),
    "imei" -> col("imei").cast("bigint"),
    "service_id" -> col("service_id"),
    "sp_id" -> col("sp_id"),
    "category_id" -> col("category_id"),
    "content_id" -> col("content_id"),
    "qos" -> col("qos"),
    "bearer_protocol_type" -> col("bearer_protocol_type").cast(
      DecimalType(10, 0)
    ),
    "start_timestamp" -> expr(
      "from_unixtime(unix_timestamp(cast(start_timestamp AS STRING), 'yyyyMMddHHmmss'))"
    ).cast("timestamp"),
    "stop_timestamp" -> expr(
      "from_unixtime(unix_timestamp(cast(stop_timestamp AS STRING), 'yyyyMMddHHmmss'))"
    ).cast("timestamp"),
    "charging_id" -> col("charging_id"),
    "transition_id" -> col("transition_id"),
    "service_level" -> col("service_level").cast(DecimalType(10, 0)),
    "brand_id" -> col("brand_id").cast(DecimalType(20, 0)),
    "main_offering_id" -> col("main_offering_id").cast(DecimalType(20, 0)),
    "charging_party_number" -> col("charging_party_number").cast("bigint"),
    "pay_type" -> col("pay_type").cast("tinyint"),
    "charging_type" -> col("charging_type").cast("tinyint"),
    "roam_state" -> col("roam_state").cast("tinyint"),
    "calling_home_country_code" -> col("calling_home_country_code").cast(
      DecimalType(10, 0)
    ),
    "calling_home_area_number" -> col("calling_home_area_number").cast(
      DecimalType(10, 0)
    ),
    "calling_home_network_code" -> col("calling_home_network_code").cast(
      DecimalType(10, 0)
    ),
    "calling_roam_country_code" -> col("calling_roam_country_code").cast(
      DecimalType(10, 0)
    ),
    "calling_roam_area_number" -> col("calling_roam_area_number").cast(
      DecimalType(10, 0)
    ),
    "calling_roam_network_code" -> col("calling_roam_network_code").cast(
      DecimalType(10, 0)
    ),
    "service_type" -> col("service_type"),
    "calling_network_type" -> col("calling_network_type"),
    "calling_vpn_top_group_number" -> col("calling_vpn_top_group_number").cast(
      "string"
    ),
    "calling_vpn_group_number" -> col("calling_vpn_group_number").cast(
      "string"
    ),
    "online_charging_flag" -> col("online_charging_flag").cast("tinyint"),
    "start_time_of_billcycle" -> expr(
      "from_unixtime(unix_timestamp(cast(start_time_of_billcycle AS STRING), \"yyyyMMddHHmmss\"))"
    ).cast("timestamp"),
    "last_effect_offering" -> col("last_effect_offering").cast(
      DecimalType(20, 0)
    ),
    "dt_discount" -> col("dt_discount").cast(DecimalType(10, 0)),
    "rating_group" -> col("rating_group").cast(DecimalType(10, 0)),
    "home_zone_id" -> col("home_zone_id").cast(DecimalType(10, 0)),
    "special_zone_id" -> col("special_zone_id").cast(DecimalType(10, 0)),
    "data_zone_id" -> col("data_zone_id").cast(DecimalType(10, 0)),
    "main_balance_info" -> col("main_balance_info"),
    "chg_balance_info" -> col("chg_balance_info"),
    "chg_free_unit_info" -> col("chg_free_unit_info"),
    "user_state" -> col("user_state"),
    "group_pay_flag" -> col("group_pay_flag").cast(DecimalType(10, 0)),
    "rat_type" -> col("rat_type").cast(DecimalType(10, 0)),
    "charge_party_indicator" -> col("charge_party_indicator"),
    "roaming_zone_id" -> col("roaming_zone_id"),
    "primary_offer_chg_amt" -> col("primary_offer_chg_amt").cast(
      DecimalType(20, 0)
    ),
    "reserved_2" -> col("reserved_2").cast(DecimalType(20, 0)),
    "fu_charging_offer_id" -> when(
      col("fu_charging_offer_id") === lit(""),
      lit(null: String)
    )
      .otherwise(col("fu_charging_offer_id")),
    "load_processing_timestamp" -> expr("now() - interval 6 hours"),
    "load_processing_hour" -> expr(
      "cast(date_format(now(), \"yyyyMMddHH\") AS INT)"
    ),
    "fu_bonus_offer_id" -> col("fu_bonus_offer_id"),
    "filler" -> col("filler"),
    "imei_str" -> col("imei"),
    "billing_month" -> date_format(
      unix_timestamp(
        col("cust_local_start_date"),
        "yyyyMMddHHmmss"
      ).cast("timestamp"),
      "yyyyMM"
    ).cast("int"),
    "event_hour" -> date_format(
      unix_timestamp(
        col("cust_local_start_date"),
        "yyyyMMddHHmmss"
      ).cast("timestamp"),
      "yyyyMMddHH"
    ).cast("int"),
    "be_id" -> col("be_id").cast(LongType)
  )

  def selectOrder(df: DataFrame): DataFrame = {
    df.select(
      "cdr_id",
      "cdr_sub_id",
      "cdr_type",
      "split_cdr_reason",
      "cdr_batch_id",
      "src_rec_line_no",
      "src_cdr_id",
      "src_cdr_no",
      "status",
      "re_rating_times",
      "create_date",
      "start_date",
      "end_date",
      "cust_local_start_date",
      "cust_local_end_date",
      "std_evt_type_id",
      "evt_source_category",
      "obj_type",
      "obj_id",
      "owner_cust_id",
      "default_acct_id",
      "pri_identity",
      "bill_cycle_id",
      "service_category",
      "usage_service_type",
      "session_id",
      "main_node",
      "session_id_serial_1",
      "session_id_serial_2",
      "session_id_serial_3",
      "result_code",
      "result_reason",
      "hot_seq",
      "cp_id",
      "recipient_number",
      "usage_measure_id",
      "actual_usage",
      "rate_usage",
      "service_unit_type",
      "usage_measure_id_2",
      "actual_usage_2",
      "rate_usage_2",
      "service_unit_type_2",
      "debit_amount",
      "reserved_1",
      "debit_from_prepaid",
      "debit_from_advance_prepaid",
      "debit_from_postpaid",
      "debit_from_advance_postpaid",
      "debit_from_credit_postpaid",
      "total_tax",
      "free_unit_amount_of_times",
      "free_unit_amount_of_duration",
      "free_unit_amount_of_flux",
      "acct_id_1",
      "acct_balance_id_1",
      "balance_type_1",
      "cur_balance_1",
      "chg_balance_1",
      "currency_id_1",
      "oper_type_acct_1",
      "acct_id_2",
      "acct_balance_id_2",
      "balance_type_2",
      "cur_balance_2",
      "chg_balance_2",
      "currency_id_2",
      "oper_type_acct_2",
      "acct_id_3",
      "acct_balance_id_3",
      "balance_type_3",
      "cur_balance_3",
      "chg_balance_3",
      "currency_id_3",
      "oper_type_acct_3",
      "acct_id_4",
      "acct_balance_id_4",
      "balance_type_4",
      "cur_balance_4",
      "chg_balance_4",
      "currency_id_4",
      "oper_type_acct_4",
      "acct_id_5",
      "acct_balance_id_5",
      "balance_type_5",
      "cur_balance_5",
      "chg_balance_5",
      "currency_id_5",
      "oper_type_acct_5",
      "acct_id_6",
      "acct_balance_id_6",
      "balance_type_6",
      "cur_balance_6",
      "chg_balance_6",
      "currency_id_6",
      "oper_type_acct_6",
      "acct_id_7",
      "acct_balance_id_7",
      "balance_type_7",
      "cur_balance_7",
      "chg_balance_7",
      "currency_id_7",
      "oper_type_acct_7",
      "acct_id_8",
      "acct_balance_id_8",
      "balance_type_8",
      "cur_balance_8",
      "chg_balance_8",
      "currency_id_8",
      "oper_type_acct_8",
      "acct_id_9",
      "acct_balance_id_9",
      "balance_type_9",
      "cur_balance_9",
      "chg_balance_9",
      "currency_id_9",
      "oper_type_acct_9",
      "acct_id_10",
      "acct_balance_id_10",
      "balance_type_10",
      "cur_balance_10",
      "chg_balance_10",
      "currency_id_10",
      "oper_type_acct_10",
      "fu_own_type_1",
      "fu_own_id_1",
      "free_unit_id_1",
      "free_unit_type_1",
      "cur_amount_1",
      "chg_amount_1",
      "fu_measure_id_1",
      "oper_type_fu_1",
      "fu_own_type_2",
      "fu_own_id_2",
      "free_unit_id_2",
      "free_unit_type_2",
      "cur_amount_2",
      "chg_amount_2",
      "fu_measure_id_2",
      "oper_type_fu_2",
      "fu_own_type_3",
      "fu_own_id_3",
      "free_unit_id_3",
      "free_unit_type_3",
      "cur_amount_3",
      "chg_amount_3",
      "fu_measure_id_3",
      "oper_type_fu_3",
      "fu_own_type_4",
      "fu_own_id_4",
      "free_unit_id_4",
      "free_unit_type_4",
      "cur_amount_4",
      "chg_amount_4",
      "fu_measure_id_4",
      "oper_type_fu_4",
      "fu_own_type_5",
      "fu_own_id_5",
      "free_unit_id_5",
      "free_unit_type_5",
      "cur_amount_5",
      "chg_amount_5",
      "fu_measure_id_5",
      "oper_type_fu_5",
      "fu_own_type_6",
      "fu_own_id_6",
      "free_unit_id_6",
      "free_unit_type_6",
      "cur_amount_6",
      "chg_amount_6",
      "fu_measure_id_6",
      "oper_type_fu_6",
      "fu_own_type_7",
      "fu_own_id_7",
      "free_unit_id_7",
      "free_unit_type_7",
      "cur_amount_7",
      "chg_amount_7",
      "fu_measure_id_7",
      "oper_type_fu_7",
      "fu_own_type_8",
      "fu_own_id_8",
      "free_unit_id_8",
      "free_unit_type_8",
      "cur_amount_8",
      "chg_amount_8",
      "fu_measure_id_8",
      "oper_type_fu_8",
      "fu_own_type_9",
      "fu_own_id_9",
      "free_unit_id_9",
      "free_unit_type_9",
      "cur_amount_9",
      "chg_amount_9",
      "fu_measure_id_9",
      "oper_type_fu_9",
      "fu_own_type_10",
      "fu_own_id_10",
      "free_unit_id_10",
      "free_unit_type_10",
      "cur_amount_10",
      "chg_amount_10",
      "fu_measure_id_10",
      "oper_type_fu_10",
      "acct_id_ba_1",
      "acct_balance_id_ba_1",
      "balance_type_ba_1",
      "bonus_amount_ba_1",
      "current_balance_ba_1",
      "currency_id_ba_1",
      "oper_type_ba_1",
      "acct_id_ba_2",
      "acct_balance_id_ba_2",
      "balance_type_ba_2",
      "bonus_amount_ba_2",
      "current_balance_ba_2",
      "currency_id_ba_2",
      "oper_type_ba_2",
      "acct_id_ba_3",
      "acct_balance_id_ba_3",
      "balance_type_ba_3",
      "bonus_amount_ba_3",
      "current_balance_ba_3",
      "currency_id_ba_3",
      "oper_type_ba_3",
      "acct_id_ba_4",
      "acct_balance_id_ba_4",
      "balance_type_ba_4",
      "bonus_amount_ba_4",
      "current_balance_ba_4",
      "currency_id_ba_4",
      "oper_type_ba_4",
      "acct_id_ba_5",
      "acct_balance_id_ba_5",
      "balance_type_ba_5",
      "bonus_amount_ba_5",
      "current_balance_ba_5",
      "currency_id_ba_5",
      "oper_type_ba_5",
      "acct_id_ba_6",
      "acct_balance_id_ba_6",
      "balance_type_ba_6",
      "bonus_amount_ba_6",
      "current_balance_ba_6",
      "currency_id_ba_6",
      "oper_type_ba_6",
      "acct_id_ba_7",
      "acct_balance_id_ba_7",
      "balance_type_ba_7",
      "bonus_amount_ba_7",
      "current_balance_ba_7",
      "currency_id_ba_7",
      "oper_type_ba_7",
      "acct_id_ba_8",
      "acct_balance_id_ba_8",
      "balance_type_ba_8",
      "bonus_amount_ba_8",
      "current_balance_ba_8",
      "currency_id_ba_8",
      "oper_type_ba_8",
      "acct_id_ba_9",
      "acct_balance_id_ba_9",
      "balance_type_ba_9",
      "bonus_amount_ba_9",
      "current_balance_ba_9",
      "currency_id_ba_9",
      "oper_type_ba_9",
      "acct_id_ba_10",
      "acct_balance_id_ba_10",
      "balance_type_ba_10",
      "bonus_amount_ba_10",
      "current_balance_ba_10",
      "currency_id_ba_10",
      "oper_type_ba_10",
      "fu_own_type_bfu_1",
      "fu_own_id_bfu_1",
      "free_unit_type_bfu_1",
      "free_unit_id_bfu_1",
      "bonus_amount_bfu_1",
      "current_amount_bfu_1",
      "fu_measure_id_bfu_1",
      "oper_type_bfu_1",
      "fu_own_type_bfu_2",
      "fu_own_id_bfu_2",
      "free_unit_type_bfu_2",
      "free_unit_id_bfu_2",
      "bonus_amount_bfu_2",
      "current_amount_bfu_2",
      "fu_measure_id_bfu_2",
      "oper_type_bfu_2",
      "fu_own_type_bfu_3",
      "fu_own_id_bfu_3",
      "free_unit_type_bfu_3",
      "free_unit_id_bfu_3",
      "bonus_amount_bfu_3",
      "current_amount_bfu_3",
      "fu_measure_id_bfu_3",
      "oper_type_bfu_3",
      "fu_own_type_bfu_4",
      "fu_own_id_bfu_4",
      "free_unit_type_bfu_4",
      "free_unit_id_bfu_4",
      "bonus_amount_bfu_4",
      "current_amount_bfu_4",
      "fu_measure_id_bfu_4",
      "oper_type_bfu_4",
      "fu_own_type_bfu_5",
      "fu_own_id_bfu_5",
      "free_unit_type_bfu_5",
      "free_unit_id_bfu_5",
      "bonus_amount_bfu_5",
      "current_amount_bfu_5",
      "fu_measure_id_bfu_5",
      "oper_type_bfu_5",
      "fu_own_type_bfu_6",
      "fu_own_id_bfu_6",
      "free_unit_type_bfu_6",
      "free_unit_id_bfu_6",
      "bonus_amount_bfu_6",
      "current_amount_bfu_6",
      "fu_measure_id_bfu_6",
      "oper_type_bfu_6",
      "fu_own_type_bfu_7",
      "fu_own_id_bfu_7",
      "free_unit_type_bfu_7",
      "free_unit_id_bfu_7",
      "bonus_amount_bfu_7",
      "current_amount_bfu_7",
      "fu_measure_id_bfu_7",
      "oper_type_bfu_7",
      "fu_own_type_bfu_8",
      "fu_own_id_bfu_8",
      "free_unit_type_bfu_8",
      "free_unit_id_bfu_8",
      "bonus_amount_bfu_8",
      "current_amount_bfu_8",
      "fu_measure_id_bfu_8",
      "oper_type_bfu_8",
      "fu_own_type_bfu_9",
      "fu_own_id_bfu_9",
      "free_unit_type_bfu_9",
      "free_unit_id_bfu_9",
      "bonus_amount_bfu_9",
      "current_amount_bfu_9",
      "fu_measure_id_bfu_9",
      "oper_type_bfu_9",
      "fu_own_type_bfu_10",
      "fu_own_id_bfu_10",
      "free_unit_type_bfu_10",
      "free_unit_id_bfu_10",
      "bonus_amount_bfu_10",
      "current_amount_bfu_10",
      "fu_measure_id_bfu_10",
      "oper_type_bfu_10",
      "calling_party_number",
      "apn",
      "url",
      "calling_party_imsi",
      "access_network_address",
      "ggsn_address",
      "calling_roam_info",
      "calling_cell_id",
      "tai",
      "mcc_tai",
      "mnc_tai",
      "tac",
      "ecgi",
      "mcc_ecgi",
      "mnc_ecgi",
      "eci",
      "enodeb",
      "cell_id",
      "timestamp_of_sgsn",
      "timezone_of_sgsn",
      "bearer_capability",
      "charging_time",
      "total_flux",
      "up_flux",
      "down_flux",
      "elapse_duration",
      "imei",
      "service_id",
      "sp_id",
      "category_id",
      "content_id",
      "qos",
      "bearer_protocol_type",
      "start_timestamp",
      "stop_timestamp",
      "charging_id",
      "transition_id",
      "service_level",
      "brand_id",
      "main_offering_id",
      "charging_party_number",
      "pay_type",
      "charging_type",
      "roam_state",
      "calling_home_country_code",
      "calling_home_area_number",
      "calling_home_network_code",
      "calling_roam_country_code",
      "calling_roam_area_number",
      "calling_roam_network_code",
      "service_type",
      "calling_network_type",
      "calling_vpn_top_group_number",
      "calling_vpn_group_number",
      "online_charging_flag",
      "start_time_of_billcycle",
      "last_effect_offering",
      "dt_discount",
      "rating_group",
      "home_zone_id",
      "special_zone_id",
      "data_zone_id",
      "main_balance_info",
      "chg_balance_info",
      "chg_free_unit_info",
      "user_state",
      "group_pay_flag",
      "rat_type",
      "charge_party_indicator",
      "roaming_zone_id",
      "primary_offer_chg_amt",
      "reserved_2",
      "fu_charging_offer_id",
      "filename",
      "raw_filename",
      "load_processing_timestamp",
      "load_processing_hour",
      "fu_bonus_offer_id",
      "filler",
      "imei_str",
      "be_id",
      "billing_month",
      "event_hour"
    )
    .filter(
      col("start_time_of_billcycle").isNotNull && col("start_time_of_billcycle") =!= "" &&
      expr("CAST(SUBSTRING(start_time_of_billcycle, 1, 6) AS INT)").isNotNull &&
      col("calling_party_imsi").isNotNull && col("calling_party_imsi") =!= "" &&
      col("calling_party_number").isNotNull && col("calling_party_number") =!= "" &&
      col("main_offering_id").isNotNull && col("main_offering_id") =!= "" &&
      col("rating_group").isNotNull && col("rating_group") =!= "" &&
      col("be_id").isNotNull && col("be_id") =!= ""
    )
  }
}
